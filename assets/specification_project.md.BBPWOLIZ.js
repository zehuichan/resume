import{_ as s,c as n,o as a,a2 as p}from"./chunks/framework.DpaiXBtA.js";const g=JSON.parse('{"title":"项目规范","description":"","frontmatter":{},"headers":[],"relativePath":"specification/project.md","filePath":"specification/project.md","lastUpdated":1712716507000}'),e={name:"specification/project.md"},l=p(`<h1 id="项目规范" tabindex="-1">项目规范 <a class="header-anchor" href="#项目规范" aria-label="Permalink to &quot;项目规范&quot;">​</a></h1><p>一个项目的起步，离不开优秀的文档目录架构，下面截取我日常开发的一些目录结构。</p><h2 id="readme-md" tabindex="-1">README.md <a class="header-anchor" href="#readme-md" aria-label="Permalink to &quot;README.md&quot;">​</a></h2><p>项目起步文档，简述你的项目背景，用到的技术栈，如何快速上手等等。</p><h2 id="vite-vue3-架构" tabindex="-1">Vite + Vue3 架构 <a class="header-anchor" href="#vite-vue3-架构" aria-label="Permalink to &quot;Vite + Vue3 架构&quot;">​</a></h2><p>适用于 <code>pc</code> 、 <code>h5</code> 、<code>公众号</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>root:.</span></span>
<span class="line"><span>│  .gitignore</span></span>
<span class="line"><span>│  index.html</span></span>
<span class="line"><span>│  package.json</span></span>
<span class="line"><span>│  README.md</span></span>
<span class="line"><span>│  vite.config.js</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├─build # 编译相关</span></span>
<span class="line"><span>│  ├─compress.js</span></span>
<span class="line"><span>│  ├─html.js</span></span>
<span class="line"><span>│  ├─plugin.js</span></span>
<span class="line"><span>│  ├─proxy.js</span></span>
<span class="line"><span>│  └─utils.js</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├─public # 静态资源</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>└─src</span></span>
<span class="line"><span>    │  App.vue</span></span>
<span class="line"><span>    │  main.js</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─api # api接口</span></span>
<span class="line"><span>    ├─assets  # 图片、视频、音频、字体等资源</span></span>
<span class="line"><span>    │  ├─images</span></span>
<span class="line"><span>    │  ├─logo</span></span>
<span class="line"><span>    │  └─styles</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─components # 组件库</span></span>
<span class="line"><span>    ├─enums # 前端枚举</span></span>
<span class="line"><span>    ├─hooks # hook方法</span></span>
<span class="line"><span>    ├─install # 指令、插件</span></span>
<span class="line"><span>    │  ├─directives</span></span>
<span class="line"><span>    │  └─plugins</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─layouts # 骨架</span></span>
<span class="line"><span>    │  ├─blank</span></span>
<span class="line"><span>    │  └─default</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─router # 路由</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─store # store</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─utils # 工具方法</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    └─pages(views) # 页面</span></span></code></pre></div><h2 id="taro-vue3-架构" tabindex="-1">Taro + Vue3 架构 <a class="header-anchor" href="#taro-vue3-架构" aria-label="Permalink to &quot;Taro + Vue3 架构&quot;">​</a></h2><p>仅适用于 <code>小程序</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>root:.</span></span>
<span class="line"><span>│  .editorconfig</span></span>
<span class="line"><span>│  .gitignore</span></span>
<span class="line"><span>│  babel.config.js</span></span>
<span class="line"><span>│  jsconfig.json</span></span>
<span class="line"><span>│  package.json</span></span>
<span class="line"><span>│  project.config.json # 微信小程序</span></span>
<span class="line"><span>│  project.alipay.json # 支付宝小程序</span></span>
<span class="line"><span>│  README.md</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├─config # 环境变量和模式</span></span>
<span class="line"><span>│      dev.js</span></span>
<span class="line"><span>│      index.js</span></span>
<span class="line"><span>│      prod.js</span></span>
<span class="line"><span>│      stage.js</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>└─src</span></span>
<span class="line"><span>    │  app.config.js # 全局配置</span></span>
<span class="line"><span>    │  app.js # 入口文件</span></span>
<span class="line"><span>    │  index.html # html</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─api # api接口</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─assets  # 图片、视频、音频、字体等资源</span></span>
<span class="line"><span>    │  ├─fonts</span></span>
<span class="line"><span>    │  ├─images</span></span>
<span class="line"><span>    │  ├─styles</span></span>
<span class="line"><span>    │  └─tabs</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─components # 公共组件</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─hooks # hook方法</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─install # 指令、插件</span></span>
<span class="line"><span>    │  ├─directives</span></span>
<span class="line"><span>    │  └─nutui</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─pages # 页面</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    ├─store # store</span></span>
<span class="line"><span>    │</span></span>
<span class="line"><span>    └─utils # 工具方法</span></span></code></pre></div>`,10),i=[l];function c(t,o,r,d,h,u){return a(),n("div",null,i)}const _=s(e,[["render",c]]);export{g as __pageData,_ as default};
